{
  "Install": {
    "Actions": [
      {
        "name": "Microsoft-DeploySQLScripts",
        "displayname": "Deploying database scripts",
        "SqlScriptsFolder": "Service/Database/",
        "SqlServerIndex": "0"
      },
      //{
      //    "name": "Microsoft-SetConfigValueInSql",
      //    "displayname": "Deploy DB Configuration",
      //    "SqlServerIndex": "0",
      //    "SqlConfigTable": "[bpst_news].[configuration]"
      //},
      {
        "DeploymentName": "Function",
        "displayname": "Deploying News Functions",
        "FunctionName": "$save('function' + this.MS.DataStore.getValue('uniqueId'))",
        "name": "Microsoft-DeployAzureFunction",
        "RepoUrl": "https://github.com/juluczni/AzureFunctionsNewsTemplate"
      },
      {
        "DeploymentName": "Function",
        "displayname": "Validating News Function",
        "name": "Microsoft-WaitForArmDeploymentStatus"
      },
      {
        "displayname": "Deploy News Function Assets",
        "name": "Microsoft-DeployPrivateAssemblyToFunction"
      },
      {
        "DeploymentName": "StorageAccount",
        "displayname": "Deploy Storage Account",
        "name": "Microsoft-CreateAzureStorageAccount",
        "StorageAccountEncryptionEnabled": "false",
        "StorageAccountName": "$save('storage' + this.MS.DataStore.getValue('uniqueId'))",
        "StorageAccountType": "Standard_LRS"
      },
      {
        "DeploymentName": "StorageAccount",
        "displayname": "Validating Storage Account",
        "name": "Microsoft-WaitForArmDeploymentStatus"
      },
      {
        "DeploymentName": "StorageAccount",
        "displayname": "Get Storage Account Key",
        "name": "Microsoft-GetStorageAccountKey"
      },
      {
        "DeploymentName": "StorageAccount",
        "displayname": "Validating Key",
        "name": "Microsoft-WaitForArmDeploymentStatus"
      },
      {
        "DeploymentName": "StorageAccount",
        "displayname": "Deploy Storage Account Container",
        "name": "Microsoft-DeployStorageAccountContainer",
        "StorageAccountContainer": "newsimages"
      },
      {
        "CommitmentPlan": "commitmentplan",
        "DeploymentName": "AzureML",
        "displayname": "Deploy Azure ML Webservice",
        "name": "Microsoft-DeployAzureMLWebServiceFromFile",
        "WebServiceFile": "Service/AzureML/Experiments/TopicsWebService.json",
        "WebServiceName": "$run('TopicsWebService' + this.MS.DataStore.getValue('uniqueId'))"

      },
      {
        "CommitmentPlan": "commitmentplan",
        "DeploymentName": "AzureML",
        "displayname": "Deploy Azure ML Webservice",
        "name": "Microsoft-DeployAzureMLWebServiceFromFile",
        "WebServiceFile": "Service/AzureML/Experiments/TopicImagesWebService.json",
        "WebServiceName": "$run('TopicsImagesWebService' + this.MS.DataStore.getValue('uniqueId'))"
      },
      {
        "CommitmentPlan": "commitmentplan",
        "DeploymentName": "AzureML",
        "displayname": "Deploy Azure ML Webservice",
        "name": "Microsoft-DeployAzureMLWebServiceFromFile",
        "WebServiceFile": "Service/AzureML/Experiments/EntityWebService.json",
        "WebServiceName": "$run('EntitiesWebService' + this.MS.DataStore.getValue('uniqueId'))"
      },
      {
        "CognitiveServiceName": "TextCognitiveService",
        "CognitiveServiceType": "TextAnalytics",
        "CognitiveSkuName": "S1",
        "DeploymentName": "CognitiveText",
        "displayname": "Deploy Cognitive Service",
        "name": "Microsoft-DeployCognitiveService"
      },
      {
        "CognitiveServiceName": "TextCognitiveService",
        "CognitiveServiceType": "TextAnalytics",
        "DeploymentName": "CognitiveText",
        "displayname": "Deploy Cognitive Service Key",
        "name": "Microsoft-GetCognitiveKey"
      },
      {
        "DeploymentName": "CognitiveText",
        "displayname": "Update connector",
        "ConnectorDisplayName": "TextAnalytics",
        "ConnectorName": "cognitiveservicestextanalytics",
        "ConnectorPayload": {
          "apiKey": "$ds(CognitiveServiceKey)"
        },
        "name": "Microsoft-UpdateBlobStorageConnector"
      },
      {
        "CognitiveServiceKey": "",
        "CognitiveServiceName": "BingCognitiveService",
        "CognitiveServiceType": "Bing.Search",
        "CognitiveSkuName": "S2",
        "DeploymentName": "CognitiveBing",
        "displayname": "Deploy Cognitive Service",
        "KeyNumber": "1",
        "name": "Microsoft-DeployCognitiveService"
      },
      {
        "CognitiveServiceName": "BingCognitiveService",
        "DeploymentName": "CognitiveBing",
        "displayname": "Deploy Cognitive Service Key",
        "KeyNumber": "1",
        "name": "Microsoft-GetCognitiveKey"
      },
      {
        "ConnectorDisplayName": "bingsearch",
        "ConnectorName": "bingsearch",
        "ConnectorPayload": {
          "apiKey": "$dsall(CognitiveServiceKey)[1]"
        },
        "DeploymentName": "CognitiveBing",
        "displayname": "Update connector",
        "name": "Microsoft-UpdateBlobStorageConnector"
      },
      //{
      //  "ConnectorDisplayName": "azureblob",
      //  "ConnectorName": "azureblob",
      //  "ConnectorPayload": {
      //    "accessKey": "$ds(StorageAccountKey)"
      //    "accountName": "$ds(StorageAccountName)"
      //  },
      //  "DeploymentName": "blob",
      //  "displayname": "Update connector",
      //  "name": "Microsoft-UpdateBlobStorageConnector",
      //},
      {
        "ConnectorDisplayName": "SQLConnector",
        "ConnectorName": "sql",
        "ConnectorPayload": {
          "authType": "windows",
          "database": "$ds(Database)",
          "password": "$ds(Password)",
          "server": "$ds(Server)",
          "username": "$ds(Username)"
        },
        "DeploymentName": "sql",
        "displayname": "Update connector",
        "name": "Microsoft-UpdateBlobStorageConnector"
      },
      {
        "ConnectorDisplayName": "azureml",
        "ConnectorName": "azureml",
        "ConnectorPayload": {},
        "DeploymentName": "azureml",
        "displayname": "Update connector",
        "name": "Microsoft-UpdateBlobStorageConnector"
      },
      //{
      //  "DeploymentName": "LogicAppImageCache",
      //  "displayname": "Validate Logic App",
      //  "name": "Microsoft-WaitForArmDeploymentStatus"
      //},
      {
        "DeploymentName": "LogicAppScheduler",
        "displayname": "Deploy AML Scheduler Logic App",
        "LogicAppName": "LogicAppScheduler",
        "name": "Microsoft-DeployAzureMLSchedulerLogicApp"
      },
      {
        "DeploymentName": "LogicAppScheduler",
        "displayname": "Validate Logic App",
        "name": "Microsoft-WaitForArmDeploymentStatus"
      },
      {
        "DeploymentName": "LogicAppNewsTemplate",
        "displayname": "Deploy News Template Logic App",
        "ImageCacheLogicApp": "LogicAppImageCache",
        "LogicAppName": "LogicAppMainNews",
        "name": "Microsoft-DeployNewsTemplateLogicApp"
      },
      {
        "DeploymentName": "LogicAppNewsTemplate",
        "displayname": "Validate Logic App",
        "name": "Microsoft-WaitForArmDeploymentStatus"
      }
    ],
    "Pages": [
      {
        "architectureDiagram": "dist/Apps/Test/TemplateApps/Microsoft-NewsTemplateTest/Web/Images/newsarchdiagram.png",
        "displayname": "Getting Started",
        "list1": [
          "Azure Subscription",
          "Azure access to Cognitive Services",
          "Power BI Desktop (latest version)",
          "Power BI Pro (to share the template with your organization)"
        ],
        "list2": [
          "Search articles from hundreds of news publishers to find the most relevant results",
          "Data and search results enriched using machine learning techniques like topic modelling and entity extraction",
          "Full cloud solution with minimum set up and maintenance considerations"
        ],
        "name": "$SiteCommon$/pagesgallery/getting-started.html",
        "subtitle": "Welcome to the Bing News Adavanced Search solution template.",
        "templateName": "Advanced Search with Bing News"
      },
      {
        "azureProviders": [
          "Microsoft.MachineLearning"
        ],
        "defaultLocation": "5",
        "displayname": "Login",
        "name": "$SiteCommon$/pagesgallery/azure-login.html",
        "pricingCalculatorUrl": "https://azure.microsoft.com/en-us/pricing/calculator/",
        "pricingCost": "$run('By clicking next and deploying the template, you authorize Microsoft to create Azure resources on your subscription and bill based on their respective pricing rates.  The approximate base cost of the Azure resources used by this template is $7 a day, and every 1,000 articles will incur an additional cost of approximately $12.  These costs are estimates only and subject to change.')",
        "pricingUrl": "https://github.com/Microsoft/BusinessPlatformApps/tree/master/Source/Apps/Microsoft/Released/Microsoft-TwitterTemplate#pricing"
      },
      {
        "bingUrl": "placeholder",
        "cognitiveUrl": "placeholder",
        "displayname": "Cognitive API",
        "name": "cognitive-text.html"
      },
      {
        "displayname": "Source",
        "isAzureSql": true,
        "name": "$SiteCommon$/pagesgallery/sql-server.html",
        "newSqlDatabase": "bingNews",
        "showAzureSql": false,
        "showNewSqlOption": "true",
        "sqlInstance": "NewSql",
        "subtitle": "Set up a connection to SQL so we can bring in Bing News data.",
        "title": "Connect to your SQL Database"
      },
      {
        "displayname": "Search Terms",
        "name": "search-terms.html"
      },
      {
        "displayname": "Summary",
        "name": "$SiteCommon$/pagesgallery/summary.html",
        "values": {
          "Target Server": "$(this.MS.DataStore.getValue('Server'))",
          "Target Database": "$(this.MS.DataStore.getValue('Database'))",
          "Target Username": "$(this.MS.DataStore.getValue('Username'))",
          "Search Query": "$(this.MS.DataStore.getValue('SearchQuery'))"
        }
      },
      {
        "displayname": "Deploy",
        "filename": "$save('BingNewsTemplate.pbix')",
        "name": "$SiteCommon$/pagesgallery/progress.html",
        "uniqueId": "$save(this.MS.UtilityService.GetUniqueId(8))"
      }
    ]
  }
}
{
  "Install": {
    "Pages": [
      {
        "architectureDiagram": "dist/Apps/Microsoft/Released/Microsoft-TwitterTemplate/Web/twitterArchitectureDiagram.png",
        "displayname": "Getting Started",
        "list1": [
          "Azure Subscription",
          "Power BI Desktop (latest version)",
          "Power BI Pro (to share the template with your organization)",
          "Twitter Account"
        ],
        "list2": [
          "Full cloud solution with minimum set up and maintenance considerations",
          "Real time data pulled from Twitter & enriched using machine learning",
          "Connect to Azure SQL and import data into Power BI"
        ],
        "name": "$SiteCommon$/pagesgallery/getting-started.html",
        "subtitle": "$translate(INIT_TWITTER_SUBTITLE)",
        "templateName": "$translate(INIT_TWITTER_TEMPLATE_NAME)"
      },
      {
        "azureProviders": [
          "Microsoft.MachineLearning"
        ],
        "bapiServices": [
          "Microsoft.PowerApps"
        ],
        "displayname": "Login",
        "name": "$SiteCommon$/pagesgallery/azure-login.html",
        "pricingCalculatorUrl": "$translate(INIT_TWITTER_PRICING_CALCULATOR_URL)",
        "pricingCost": "$translate(INIT_TWITTER_PRICING_COST)",
        "pricingUrl": "$translate(INIT_TWITTER_PRICING_URL)"
      },
      {
        "displayname": "Source",
        "isAzureSql": true,
        "name": "$SiteCommon$/pagesgallery/sql-server.html",
        "newSqlDatabase": "twitterDB",
        "showAzureSql": false,
        "showNewSqlOption": "true",
        "sqlInstance": "NewSql",
        "subtitle": "$translate(INIT_TWITTER_SQL_SUBTITLE)",
        "title": "$translate(INIT_TWITTER_SQL_TITLE)"
      },
      {
        "displayname": "Twitter",
        "name": "$SiteCommon$/pagesgallery/twitter.html"
      },
      {
        "displayname": "Search Terms",
        "name": "$SiteCommon$/pagesgallery/search-terms.html"
      },
      {
        "displayname": "Twitter Handles",
        "name": "$SiteCommon$/pagesgallery/twitter-handles.html"
      },
      {
        "displayname": "AAS",
        "name": "$SiteCommon$/pagesgallery/choose-analysis-server.html",
        "showDescription": true,
        "skip": "$ds(azureSqlDisabled)"
      },
      {
        "displayname": "AAS Login",
        "name": "$SiteCommon$/pagesgallery/ssas.html",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')"
      },
      {
        "displayname": "Summary",
        "name": "$SiteCommon$/pagesgallery/summary.html",
        "values": {
          "Target Server": "$(this.MS.DataStore.getValue('Server'))",
          "Target Database": "$(this.MS.DataStore.getValue('Database'))",
          "Target Username": "$(this.MS.DataStore.getValue('Username'))"
        }
      },
      {
        "asDatabase": "twitter",
        "displayname": "Deploy",
        "filename": "$save('TwitterTemplate.pbix')",
        "filenameSSAS": "TwitterAS.pbix",
        "functionAppHostingPlan": "$save(this.uniqueIdFunction)",
        "hasPowerApp": true,
        "LogicAppHostingPlan": "$save(this.uniqueId)",
        "LogicAppName": "$save(this.uniqueId)",
        "LogicAppNameHistorical": "$save(this.uniqueId)",
        "name": "$SiteCommon$/pagesgallery/progress.html",
        "powerAppFileName": "TwitterTemplate.msapp",
        "SiteName": "$save(this.uniqueIdFunction)",
        "uniqueId": "$save(this.MS.UtilityService.GetUniqueId(10))",
        "uniqueIdFunction": "$save(this.MS.UtilityService.GetUniqueId(10))"
      }
    ],

    "Actions": [
      {
        "name": "Microsoft-DeploySQLScripts",
        "displayname": "Deploying database scripts",
        "SqlServerIndex": "0",
        "SqlScriptsFolder": "Service/Database/LogicApps"
      },
      {
        "name": "Microsoft-SetConfigValueInSql",
        "displayname": "Deploying database configuration",
        "SqlServerIndex": "0",
        "SqlConfigTable": "[pbist_twitter].[configuration]"
      },
      {
        "displayname": "Deploying Logic App database",
        "name": "Microsoft-ConfigurePowerAppTables"
      },
      {
        "displayname": "Retrieving PowerApp environment",
        "name": "Microsoft-GetPowerAppEnvironment"
      },
      {
        "displayname": "Creating PowerApp SQL connection",
        "name": "Microsoft-CreatePowerAppSqlConnection"
      },
      {
        "name": "Microsoft-DeployTwitterFunction",
        "displayname": "Deploying Twitter function",
        "DeploymentName": "Function"
      },
      {
        "name": "Microsoft-WaitForArmDeploymentStatus",
        "displayname": "Validating Twitter function",
        "DeploymentName": "Function"
      },
      {
        "name": "Microsoft-DeployAzureMLWebServiceFromFile",
        "displayname": "Deploying Azure ML web service",
        "DeploymentName": "AzureML",
        "IsRequestResponse": true,
        "CommitmentPlan": "commitmentplan",
        "WebServiceFile": "Service/AzureArm/SentimentAnalysisWebServiceNew.json",
        "WebServiceName": "$run('SentimentService' + this.MS.DataStore.getValue('uniqueId'))"
      },
      {
        "name": "Microsoft-DeployTwitterCSharpFunctionAssets",
        "displayname": "Deploying Twitter function assets"
      },
      {
        "name": "Microsoft-DeployTwitterHistoricalLogicApp",
        "displayname": "Deploying Twitter logic app",
        "DeploymentName": "LogicApp"
      },
      {
        "name": "Microsoft-WaitForArmDeploymentStatus",
        "displayname": "Validating Logic App",
        "DeploymentName": "LogicApp"
      },
      {
        "name": "Microsoft-CreateConnectorToLogicApp",
        "displayname": "Creating Logic App connector",
        "DeploymentName": "sql",
        "ConnectorName": "sql",
        "ConnectorDisplayName": "SQLConnector",
        "ConnectorPayload": {
          "authType": "windows",
          "database": "$ds(Database)",
          "password": "$ds(Password)",
          "server": "$ds(Server)",
          "username": "$ds(Username)"
        }
      },
      {
        "name": "Microsoft-UpdateBlobStorageConnector",
        "displayname": "Updating Logic App connector",
        "DeploymentName": "sql",
        "ConnectorName": "sql",
        "ConnectorDisplayName": "SQLConnector",
        "ConnectorPayload": {
          "authType": "windows",
          "database": "$ds(Database)",
          "password": "$ds(Password)",
          "server": "$ds(Server)",
          "username": "$ds(Username)"
        }
      },
      {
        "name": "Microsoft-RunLogicAppHistorical",
        "displayname": "Running Logic App historical",
        "DeploymentName": "LogicApp"
      },
      {
        "name": "Microsoft-DeployTwitterLogicApp",
        "displayname": "Deploying Twitter Logic App",
        "DeploymentName": "LogicApp"
      },
      {
        "name": "Microsoft-WaitForArmDeploymentStatus",
        "displayname": "Validating Twitter Logic App",
        "DeploymentName": "LogicApp"
      },
      {
        "name": "Microsoft-SetConfigValueInSql",
        "displayname": "Deploying database configuration",
        "SqlServerIndex": "0",
        "SqlConfigTable": "[pbist_twitter].[configuration]",
        "SqlGroup": "SolutionTemplate",
        "SqlSubGroup": "SSAS",
        "SqlEntryName": "FunctionName",
        "SqlEntryValue": "$run('asscheduler' + this.MS.DataStore.getValue('uniqueId'))",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')"
      },
      {
        "name": "Microsoft-DeployAzureASModel",
        "displayname": "Deploy AS Model",
        "xmlaFilePath": "Service/SSAS/twitter.xmla",
        "SqlConnectionString": "$dsall(SqlConnectionString)[0]",
        "ASDatabase": "twitter",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')"
      },
      {
        "name": "Microsoft-DeployAzureFunction",
        "displayname": "Deploying scheduler",
        "DeploymentName": "ASFunction",
        "FunctionName": "$save('asscheduler' + this.MS.DataStore.getValue('uniqueId'))",
        "RepoUrl": "https://github.com/MohaaliMicrosoft/AnalysisServicesRefresh",
        "sku": "Standard",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')"
      },
      {
        "name": "Microsoft-WaitForArmDeploymentStatus",
        "displayname": "Waiting for scheduler",
        "DeploymentName": "ASFunction",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')"
      },
      {
        "name": "Microsoft-DeployAzureFunctionConnectionStrings",
        "displayname": "Setting up scheduler",
        "DeploymentName": "ASFunction",
        "skip": "$run(this.MS.DataStore.getAllValues('azureSqlDisabled')[0] === 'true' || this.MS.DataStore.getValue('ssasDisabled') === 'true' ? 'true': 'false')",
        "AppSettingKeys": {
          "connStringAS": "$ds(ASConnectionString)",
          "connStringSql": "$dsall(SqlConnectionString)[0]",
          "schema": "[pbist_twitter]",
          "databaseAS": "twitter",
          "functionName": "$run('asscheduler' + this.MS.DataStore.getValue('uniqueId'))"
        }
      }
    ]
  }
}